/////////////////////////////////////////////////////////////////////////////////
FUNCIONALIDADES:


control de acceso usuarios
	-clientes
	-empleados

	
catalogo de productos
	-listar
	-busquedas de productos por un criterio 
	

PEDIDOS
	
guardar un pedido
listar los pedidos
aceptar un pedido


FACTURAS	
	
listar facturas


modificar los datos de usuario

/////////////////////////////////////////////////////////////////////////////////

LOGIN

POST /login
-------------------------
{
	"login" : "aaa",
	"pw"    : "bbb"
}

200 OK
Content-type: application/json
---------------------------------------------------------------------------------------------
{
	"usuario" : { ... },
	"JWT"     : jkshgjidshduisdfhwquoipfhipuwhgewa.trwujoñgthrwogherujighrujiaeghjirothq43.hg5u849phg54uihg7547hg35u9==
}


/////////////////////////////////////////////////////////////////////////////////

REST


////////////
//USUARIOS//
////////////

METODO	RUTA		PARAMETROS 	BODY		RESPUESTA	FUNCIONALIDAD
		
GET 	/usuarios	criterio	-		[ { json } ]	listarUsuarios
GET	/usuarios/:id	-		-		{ json }        buscarUsuarioPorId
POST	/usuarios	-		{ json }	{ json }	insertarUsuario
PUT 	/usuarios/:id	-		{ json }	{ json }	modificarUsuario
DELETE  /usuarios/:id	-		-		-		borrarUsuario

/////////////
//PRODUCTOS//
/////////////

METODO	RUTA		PARAMETROS 	BODY		RESPUESTA	FUNCIONALIDAD
		
GET 	/productos	criterio	-		[ { json } ]	listarProductos
GET	/productos/:id	-		-		{ json }	buscarProdutoPorId
POST	/productos	-		{ json }	{ json }	insertarProducto
PUT 	/productos/:id	-		{ json }	{ json }	modificarProducto
DELETE  /productos/:id	-		-		-		borrarProducto

///////////
//PEDIDOS//
///////////

METODO	RUTA			PARAMETROS 	BODY		RESPUESTA	FUNCIONALITÉ
		
GET 	/pedidos		criterio	-		[ { json } ]	listarPedidos
				idUsuario
GET	/pedidos/:id		-		-		{ json }	buscarPedidoPorId
POST	/pedidos		-		{ json }	{ json }	insertarPedido
PUT 	/pedidos/:id		-		{ json }	{ json }	modificarPedido
DELETE  /pedidos/:id		-		-		-		borrarPedido

PUT	/pedidos/:id/estados	-		{ json }	-		aceptarPedido/facturarPedido/confirmarPedido


Esto no es rest

POST /pedidos/:id/aceptar
POST /aceptarPedidos/:id


PUT /pedidos/87/estados
CT:app/json
-----------------------
{
	"estado" : "ACEPTADO"
}



POST /ordenDeCompra



---------------
|¿QUE ES REST?|
---------------
|FALSEDAD     |
|MENTIRA      |
|ENGAÑO       |
|CHARADA      |
|PARIPE       |
---------------   






paths:
  
  /login:
    post:
      
  
  /usuarios:
    get:
    post:
  
  /usuarios/{id}:
    get:
    put:
    delete:
  
  /productos:
    get:
    post:
  
  /productos/{id}:
    get:
    put:
    delete:
  
  /pedidos:
    get:
    post:  
  
  /pedidos/{id}
    get:
    put:
    delete:  
  
  /pedidos/{id}/estados:
    put:
    
  
  
  
  
  
LISTAR LOS PEDIDOS DE UN USUARIO
  


GET	SELECT
POST	INSERT
PUT	UPDATE
DELETE	DELETE

SELECT * FROM PEDIDOS WHERE ID_USR=fhdjkdghkjs
  
            |
GET /pedidos?idUsuario=1234567890ABCDEF1234
            |


GET /usuarios/1234567890ABCDEF1234/pedidos


/usuarios

	usr-1.txt
	usr-2.txt
	usr-3.txt
	usr-4.txt
	usr-5.txt
	
	
/pedidos

	ped-0
	ped-1
	ped-2
	ped-3
	ped-4
	ped-5



GET /usuarios/3/pedidos



/usuarios

	/usr-1
		usr-1.txt
		/pedidos
			ped-0
			ped-4
		/facturas
		/incidencias
		/direcciones
		
	/usr-2
		usr-2.txt
		/pedidos
			ped-1
			ped-2
		/facturas
		/incidencias
		/direcciones		
		
	/usr-3
		usr-3.txt
		/pedidos
			ped-3
			ped-5
		/facturas
		/incidencias
		/direcciones	








<script src="https://unpkg.com/realm-web@0.8.0/dist/bundle.iife.js"></script>





















usuario._id 
  
  
1..n
1..*
n..m
*..*
  
  
usuario   1..n    pedido


  
  
  
  
  
  
  
  
POST /clientes
---------------
{ }


GET /clientes?param1=valor1
---------------------------
{

}
  
  
  
  
  




  
  
  
  
  
  
  


 { nombre : {$regex: new RegExp("áf"), $options: "i"}, "precio" : { $gt : 0, $lt:2000 } }






/////////////////////////////


De Juan Antonio Martin Lopez para todos:  04:47 PM
import { Pipe, PipeTransform } from '@angular/core';
import { from } from 'rxjs';
import { take, tap, mergeAll } from 'rxjs/operators';

@Pipe({
    name: 'excerpt'
})
export class ExcerptPipe implements PipeTransform {

    transform(value: string, len: number = 15) {

        const words = value.split(' ');

        let excerptPhrase = '';

        const obs$ = from(words).pipe(
            take(len)
        ).subscribe(result => {
            excerptPhrase = excerptPhrase + result + ' ';
        });

        return excerptPhrase + '...';
    }
}































