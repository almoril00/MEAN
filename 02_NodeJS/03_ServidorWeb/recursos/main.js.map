{"version":3,"sources":["./src/app/componentes/maquetacion/menu/menu.component.ts","./src/app/componentes/maquetacion/menu/menu.component.html","./src/app/componentes/usuarios/registro/registro.component.ts","./src/app/componentes/usuarios/registro/registro.component.html","./src/app/componentes/tienda/confirmacion-compra/confirmacion-compra.component.ts","./src/app/componentes/tienda/confirmacion-compra/confirmacion-compra.component.html","./src/environments/environment.ts","./src/app/componentes/usuarios/maquetacion-login/maquetacion-login.component.ts","./src/app/componentes/usuarios/maquetacion-login/maquetacion-login.component.html","./src/app/componentes/usuarios/login/login.component.ts","./src/app/componentes/usuarios/login/login.component.html","./src/app/servicios/productos.service.ts","./src/app/componentes/maquetacion/pie/pie.component.ts","./src/app/componentes/maquetacion/pie/pie.component.html","./src/app/interceptores/interceptor.autenticacion.ts","./src/app/util/configuracion.ts","./src/app/componentes/tienda/maquetacion-tienda/maquetacion-tienda.component.ts","./src/app/componentes/tienda/maquetacion-tienda/maquetacion-tienda.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/componentes/tienda/catalogo/catalogo.component.ts","./src/app/componentes/tienda/catalogo/catalogo.component.html","./src/app/componentes/usuarios/perfil/perfil.component.ts","./src/app/componentes/usuarios/perfil/perfil.component.html","./src/app/componentes/maquetacion/cabecera/cabecera.component.ts","./src/app/componentes/maquetacion/cabecera/cabecera.component.html","./src/app/app.rutas.module.ts","./src/app/servicios/usuarios.service.ts","./src/app/componentes/tienda/cesta/cesta.component.ts","./src/app/componentes/tienda/cesta/cesta.component.html","./src/app/entidades/pedido.ts","./src/app/componentes/usuarios/aceptacion-terminos/aceptacion-terminos.component.ts","./src/app/componentes/usuarios/aceptacion-terminos/aceptacion-terminos.component.html","./src/app/componentes/tienda/detallePedido/detallePedido.component.ts","./src/app/componentes/tienda/detallePedido/detallePedido.component.html","./src/app/servicios/session.service.ts","./src/app/servicios/autenticacion.service.ts","./src/app/entidades/detallePedido.ts","./src/app/entidades/usuario.ts","./src/main.ts","./src/app/componentes/tienda/producto/producto.component.ts","./src/app/componentes/tienda/producto/producto.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Usuario } from 'src/app/entidades/usuario';\nimport { SessionService } from 'src/app/servicios/session.service';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  public usuario:Usuario\n\n  constructor(private sessionService:SessionService) { \n\n    this.usuario = sessionService.getItem(\"usuario\")\n\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n    <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/tienda/perfil\">{{ usuario.login }}</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/tienda/catalogo\">Catálogo</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/tienda/cesta\">Cesta</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\">Pedidos</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\">Facturas</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\">Salir</a>\n        </li>\n    </ul>\n  </nav>   \n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Usuario } from 'src/app/entidades/usuario';\nimport { SessionService } from 'src/app/servicios/session.service';\n\n@Component({\n  selector: 'app-registro',\n  templateUrl: './registro.component.html',\n  styleUrls: ['./registro.component.css']\n})\nexport class RegistroComponent implements OnInit {\n\n  public usuario:Usuario = new Usuario()\n  public confirmacionPw:string\n  public mensaje:String = \"\"\n\n  constructor(private router:Router,\n              private sessionService:SessionService) { \n\n    console.log(\"Creando RegistroComponent\")\n\n    //Podemos usar el sessionStorage\n    /*\n    let usrJSON = sessionStorage.getItem(\"usuario\")\n    if(usrJSON){\n      this.usuario = JSON.parse(usrJSON)\n      sessionStorage.removeItem(\"usuario\")\n    }*/\n\n    let usr = sessionService.getItem(\"usuario\")\n    if(usr){\n      this.usuario = usr\n      sessionService.removeItem(\"usuario\")\n    }\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  public siguiente():void{\n\n    if(this.usuario.pw==null || this.usuario.pw.trim().length<10){      \n      this.mensaje = \"El pasword debe contener al menos 10 caracteres\"\n      return\n    }    \n\n    if(this.usuario.pw != this.confirmacionPw){\n      this.mensaje = \"El password y la confirmación no coinciden\"\n      return\n    }\n\n    //Guardamos el usuario en el session storage antes de navegar\n    //sessionStorage.setItem(\"usuario\",JSON.stringify(this.usuario))\n\n    //Antes de navegar guardamos el usuario en el sessionService\n    this.sessionService.setItem(\"usuario\", this.usuario)\n\n    //this.router.navigate(['/usuarios/aceptacion'])\n    this.router.navigateByUrl('/usuarios/aceptacion') \n\n  }\n\n}\n","<p></p>\n\n<div class=\"text-center\">\n    <h2>Alta de usuario</h2>\n</div>\n\n<div class=\"form-horizontal\" id=\"formulario\">\n  <div class=\"form-group\">\n    <label class=\"control-label col-xs-2\" for=\"nombre\">Nombre</label>\n    <div class=\"col-xs-8\">\n      <input type=\"text\" \n             class=\"form-control\"\n             required=\"required\" \n             [(ngModel)]=\"usuario.nombre\"/>\n    </div> \n  </div>\n  <div class=\"form-group\">\n    <label class=\"control-label col-xs-2\" for=\"login\">Login</label>\n    <div class=\"col-xs-8\">\n      <input type=\"text\" \n             class=\"form-control\"\n             required=\"required\"\n             [(ngModel)]=\"usuario.login\"/>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label class=\"control-label col-xs-2\" for=\"password\" >Password</label>\n    <div class=\"col-xs-8\">\n      <input type=\"text\" \n             class=\"form-control\"\n             [(ngModel)]=\"usuario.pw\"/>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label class=\"control-label col-xs-2\" for=\"cp\">Confirmar password</label>\n    <div class=\"col-xs-8\">\n      <input type=\"text\" \n             class=\"form-control\"\n             [(ngModel)]=\"confirmacionPw\"/>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label class=\"control-label col-xs-2\" for=\"correoE\">Correo E.</label>\n    <div class=\"col-xs-8\">\n      <input type=\"text\" \n             class=\"form-control\"\n             [(ngModel)]=\"usuario.correoE\"/>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label class=\"control-label col-xs-2\" for=\"idioma\">Idioma</label>\n    <div class=\"col-xs-8\">\n      <select class=\"form-control\" [(ngModel)]=\"usuario.idioma\">\n        <option>ES</option>\n        <option>EN</option>\n      </select>\n    </div>\n  </div>\n</div>\n\n<!--\nPodríamos hacerlo así\n<div *ngIf=\"mensaje.length>0\" class=\"alert alert-danger\">{{mensaje}}</div>\n-->\n<!--Preguntar por la existencia de algo en angular implica que devuelve false si:\n    -es undefined\n    -es null\n    -es una cadena de texto vacía en caso de tratarse de un string\n-->\n<div *ngIf=\"mensaje\" class=\"alert alert-danger\">{{mensaje}}</div>\n\n<div class=\"text-center\">\n  <input type=\"button\" \n         value=\"Siguiente\" \n         class=\"btn mr-1 btn-primary\" \n         style=\"width:110px\"\n         (click)=\"siguiente()\"/>\n  <input type=\"button\" \n         value=\"Cancelar\"  \n         class=\"btn mr-1 btn-warning\" \n         style=\"width:110px\"\n         routerLink=\"/\" />\n</div>\n\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { DetallePedido } from 'src/app/entidades/detallePedido';\nimport { Pedido } from 'src/app/entidades/pedido';\nimport { SessionService } from 'src/app/servicios/session.service';\n\n@Component({\n  selector: 'app-confirmacion-compra',\n  templateUrl: './confirmacion-compra.component.html',\n  styleUrls: ['./confirmacion-compra.component.css']\n})\nexport class ConfirmacionCompraComponent implements OnInit {\n\n  public cesta:Pedido\n\n  constructor(private sessionService:SessionService) { \n    this.cesta = sessionService.getItem(\"cesta\")\n    \n    //Arovechamos este momento para añadirle a la cesta el usuario\n    if(!this.cesta.usuario){\n      this.cesta.usuario = sessionService.getItem(\"usuario\")\n      //Si la cesta no tiene direccion le ponemos la del usuario como valor inicial\n      this.cesta.dirEntrega = this.cesta.usuario.direccion\n    }\n\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<h4 class=\"text-center mt-4\">\n    Confirmación de la compra\n</h4>\n\n <div class=\"form-horizontal\" id=\"formulario\">\n    \n    <div class=\"form-group\">\n        <label class=\"control-label col-xs-2\" for=\"direccion\">Direccion de entrega</label>\n        <div class=\"col-xs-8\">\n            <input type=\"text\" id=\"direccion\" class=\"form-control\" required=\"required\" [(ngModel)]=\"cesta.dirEntrega\"/>\n        </div>\n    </div>\n    \n    <div class=\"form-group\">\n        <label class=\"control-label col-xs-2\" for=\"fechaEntrega\">Fecha de entrega</label>\n        <div class=\"col-xs-8\">\n            <input type=\"text\" id=\"fechaEntrega\" class=\"form-control\" required=\"required\" [(ngModel)]=\"cesta.fechaEntrega\" />\n        </div>\n    </div>\n\n    <div class=\"form-group\">\n        <label class=\"control-label col-xs-2\" for=\"formaPago\">Forma de pago</label>\n        <div class=\"col-xs-8\">\n            <input type=\"text\" id=\"formaPago\" class=\"form-control\" required=\"required\"  [(ngModel)]=\"cesta.formaPago\"/>\n        </div>\n    </div>\n\n    <div class=\"text-center\">\n        <input type=\"button\" value=\"Confirmar\" class=\"btn mr-1 btn-primary\" style=\"width:110px\" />\n        <input type=\"button\" value=\"Cancelar\" class=\"btn mr-1 btn-danger\" style=\"width:110px\" routerLink=\"/tienda/cesta\" />\n    </div>\n\n</div>   ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-maquetacion-login',\n  templateUrl: './maquetacion-login.component.html',\n  styleUrls: ['./maquetacion-login.component.css']\n})\nexport class MaquetacionLoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div class=\"row\">\n\n    <div class=\"col-6 offset-3\">    \n        <router-outlet></router-outlet>\n    </div>\n            \n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Pedido } from 'src/app/entidades/pedido';\nimport { Usuario } from 'src/app/entidades/usuario';\nimport { AutenticacionService } from 'src/app/servicios/autenticacion.service';\nimport { SessionService } from 'src/app/servicios/session.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public mensaje:string = \"\"\n\n  //Esto no estaría del todo mal\n  //public login:string\n  //public pw:string\n\n  //Pero esto es más mejor del mundo mundial\n  public usuario:Usuario /*= new Usuario()*/\n\n  constructor(private autenticacionService:AutenticacionService,\n              private sessionService:SessionService,\n              private router:Router) { \n    //Inicializar en constructor las propiedades del componene es más ortodoxo \n    this.usuario = new Usuario()\n  }\n\n  ngOnInit(): void {\n  }\n\n  public entrar():void{\n\n    if(!this.usuario.login || !this.usuario.pw){\n      this.mensaje = \"IMBECIL\"\n      return\n    }    \n\n    this\n      .autenticacionService\n      .getToken(this.usuario)\n      .subscribe(\n        respuesta => {\n          this.sessionService.setItem(\"JWT\", respuesta.JWT)\n          this.sessionService.setItem(\"usuario\",respuesta.usuario)\n\n          //Si descrubrimos que inicializar la tienda es algo más que esta simple \n          //línea nos lo llevariamos a otra parte\n          this.sessionService.setItem(\"cesta\", new Pedido())\n\n          this.router.navigateByUrl(\"/tienda/catalogo\")\n        },\n        (error) => this.mensaje = \"Credenciales incorrectas\"\n      )\n\n    }\n\n}\n","<br/>\n<br/>\n\n<div class=\"card card-primary\">\n    <div class=\"card-header\">Login</div>\n    <div class=\"card-body\">\n\n    <div class=\"form-horizontal\" id=\"formulario\">\n        <div class=\"form-group\">\n        <label class=\"control-label col-xs-2\" for=\"login\">Login</label>\n        <div class=\"col-xs-10\">\n            <input id=\"login\" type=\"text\" [(ngModel)]=\"usuario.login\" class=\"form-control\"/>\n        </div>\n        </div>   \n        <div class=\"form-group\">\n        <label class=\"control-label col-xs-2\" for=\"pw\">Pw</label>\n        <div class=\"col-xs-10\">\n            <input id=\"pw\" type=\"text\" [(ngModel)]=\"usuario.pw\"  class=\"form-control\"/>\n        </div>\n        </div>  \n        \n        <div *ngIf=\"mensaje\" class=\"alert alert-danger\">{{mensaje}}</div>\n\n    </div> <!--formulario-->\n\n    <div class=\"text-center\">\n        <input type=\"button\" class=\"btn mr-1 btn-primary\" style=\"width:110px\" (click)=\"entrar()\" value=\"Entrar\" />\n        <input type=\"button\" class=\"btn mr-1 btn-primary\" style=\"width:110px\" routerLink=\"/usuarios/registro\" value=\"Registrarse\" />\n    </div>   \n\n    </div>\n</div>\n\n\n\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Configuracion } from '../util/configuracion';\r\n\r\n@Injectable( { providedIn : 'root' } )\r\nexport class ProductosService {\r\n\r\n    public constructor(private httpClient:HttpClient,\r\n                       private configuracion:Configuracion){\r\n    }\r\n\r\n    //listarProductos(criterio)\r\n    public listarProductos(/*criterio*/):Observable<any>{\r\n        return this.httpClient.get(this.configuracion.url_servidor+\"/productos\")\r\n    }\r\n\r\n    //buscarProducto(_id)\r\n\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pie',\n  templateUrl: './pie.component.html',\n  styleUrls: ['./pie.component.css']\n})\nexport class PieComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"text-center\">\n    <h6>Este pie es una cosa estupenda. Nov. 2020</h6>\n</footer>\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { SessionService } from '../servicios/session.service';\r\n\r\n//Los interceptores son servicios\r\n//Se registran en el módulo (en este caso en AppModule)\r\n//Deben implementar la interfaz HttpInterceptor\r\n\r\n//Una interfaz es un contrato que firma una clase en el que se compromete a tener\r\n//una serie de funciones\r\n\r\n//La interfaz HttpInterceptor obliga a tener la funcion 'intercept'\r\n\r\n@Injectable()\r\nexport class InterceptorAutenticacion implements HttpInterceptor{\r\n    \r\n    public constructor(private sessionService:SessionService){\r\n    }\r\n\r\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        \r\n        console.log(\"Interceptando una petición AJAX\")\r\n\r\n        let JWT = this.sessionService.getItem(\"JWT\")\r\n        if(JWT){\r\n            //Los objetos request en Angular son inmutables\r\n            //Una vez creado no puede modificarse así que lo que hacemos es un clon\r\n            //y le añadimos o modificamos cosas\r\n            req = req.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${JWT}`\r\n                }\r\n            })             \r\n        }\r\n\r\n        //Si no invocamos 'next' la petición no se enviará\r\n        return next.handle(req)\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable( { providedIn : 'root' } )\r\nexport class Configuracion {\r\n    \r\n    public url_servidor:string = \"https://localhost:9000\"\r\n\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SessionService } from 'src/app/servicios/session.service';\n\n@Component({\n  selector: 'app-maquetacion-tienda',\n  templateUrl: './maquetacion-tienda.component.html',\n  styleUrls: ['./maquetacion-tienda.component.css']\n})\nexport class MaquetacionTiendaComponent implements OnInit {\n\n  constructor(private sessionService:SessionService,\n              private router:Router) {\n\n    if(!sessionService.getItem(\"usuario\")){\n      router.navigateByUrl(\"/\")\n    }\n\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n\n/*\n\n{ path: '',\n    redirectTo: '/heroes',\n    pathMatch: 'full'\n},\n{ path: '**', component: PageNotFoundComponent }\n\n\n\n*/","\n<app-menu></app-menu>\n\n<!-- router outlet izquerda -->\n\n<div class=\"row\">\n\n    <div class=\"col-2\">\n\n    </div>\n\n    <div class=\"col-8\">    \n        <router-outlet></router-outlet>\n    </div>\n          \n    <div class=\"col-2\">\n        \n    </div>\n\n</div>\n\n\n<!-- router outlet derecha -->","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Angular';\n}\n","\n\n<app-cabecera></app-cabecera>\n\n<router-outlet></router-outlet>\n\n<app-pie></app-pie>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './componentes/usuarios/login/login.component';\nimport { RegistroComponent } from './componentes/usuarios/registro/registro.component';\nimport { AceptacionTerminosComponent } from './componentes/usuarios/aceptacion-terminos/aceptacion-terminos.component';\nimport { CabeceraComponent } from './componentes/maquetacion/cabecera/cabecera.component';\nimport { PieComponent } from './componentes/maquetacion/pie/pie.component';\nimport { CatalogoComponent } from './componentes/tienda/catalogo/catalogo.component';\nimport { MaquetacionLoginComponent } from './componentes/usuarios/maquetacion-login/maquetacion-login.component';\nimport { MaquetacionTiendaComponent } from './componentes/tienda/maquetacion-tienda/maquetacion-tienda.component';\nimport { FormsModule } from '@angular/forms';\nimport { AppRutasModule } from './app.rutas.module';\nimport { MenuComponent } from './componentes/maquetacion/menu/menu.component';\nimport { PerfilComponent } from './componentes/usuarios/perfil/perfil.component';\nimport { InterceptorAutenticacion } from './interceptores/interceptor.autenticacion';\nimport { ProductoComponent } from './componentes/tienda/producto/producto.component';\nimport { CestaComponent } from './componentes/tienda/cesta/cesta.component';\nimport { DetallePedidoComponent } from './componentes/tienda/detallePedido/detallePedido.component';\nimport { ConfirmacionCompraComponent } from './componentes/tienda/confirmacion-compra/confirmacion-compra.component';\n\n@NgModule({\n  declarations: [\n    PieComponent,\n    AppComponent,\n    MenuComponent,\n    CestaComponent,\n    LoginComponent,\n    PerfilComponent,\n    ProductoComponent,\n    RegistroComponent,\n    CabeceraComponent,\n    CatalogoComponent,\n    DetallePedidoComponent,\n    MaquetacionLoginComponent,\n    MaquetacionTiendaComponent,\n    AceptacionTerminosComponent,\n    ConfirmacionCompraComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule, //Para el bidirectional binding [(ngModel)]\n    HttpClientModule, //Para enviar peticiones ajax con el objeto HttpClient\n    AppRutasModule\n  ],\n  providers: [\n    //Los interceptores de httpClient se registran aqui\n    //'multi: true' indica que pueden haber más de uno formando una cadena\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: InterceptorAutenticacion, \n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Producto } from 'src/app/entidades/producto';\nimport { ProductosService } from 'src/app/servicios/productos.service';\n\n@Component({\n  selector: 'app-catalogo',\n  templateUrl: './catalogo.component.html',\n  styleUrls: ['./catalogo.component.css']\n})\nexport class CatalogoComponent implements OnInit {\n\n  public productos:Producto[] //Undefined\n\n  constructor(private productosService:ProductosService) { \n    this.listarProductos()\n  }\n\n  ngOnInit(): void {\n  }\n\n  public listarProductos():void{\n    this\n      .productosService\n      .listarProductos()\n      .subscribe(\n        productos => this.productos = productos,\n        error => {\n          console.log(error)\n        }\n      )\n  }\n\n}\n","<div id=\"accordion\" class=\"mt-3\">\n    <div class=\"card\">\n        <div class=\"card-header\">\n            <a class=\"card-link\" data-toggle=\"collapse\" href=\"#collapseOne\">Búsqueda</a>\n        </div>\n        <div id=\"collapseOne\" class=\"collapse \" data-parent=\"#accordion\">\n            <div class=\"card-body\">\n                <div class=\"form-horizontal\" id=\"formulario\">\n                    <div class=\"form-group\">\n                        <label class=\"control-label col-xs-2\" for=\"nombre\">Nombre</label>\n                        <div class=\"col-xs-8\">\n                            <input type=\"text\" id=\"nombre\" class=\"form-control\" required=\"required\" />\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label class=\"control-label col-xs-2\" for=\"fabricante\">Fabricante</label>\n                        <div class=\"col-xs-8\">\n                            <select class=\"form-control\" id=\"fabricante\"></select>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label class=\"control-label col-xs-2\" for=\"categoria\">Categoría</label>\n                        <div class=\"col-xs-8\">\n                            <select class=\"form-control\" id=\"categoria\"></select>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n\n                        <div class=\"form-group col-6\">\n                            <label class=\"control-label col-xs-2\" for=\"precioMin\">Precio mín</label>\n                            <div class=\"col-xs-8\">\n                                <input type=\"text\" class=\"form-control\" id=\"precioMin\" />\n                            </div>\n                        </div>\n                        \n                        <div class=\"form-group col-6\">\n                            <label class=\"control-label col-xs-2\" for=\"precioMax\">Precio máx</label>\n                            <div class=\"col-xs-8\">\n                                <input type=\"text\" class=\"form-control\" id=\"precioMax\" />\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <div class=\"text-center\">\n                        <input type=\"button\" value=\"Buscar\" class=\"btn mr-1 btn-primary\" style=\"width:110px\" />\n                        <input type=\"button\" value=\"Vaciar\" class=\"btn mr-1 btn-danger\" style=\"width:110px\"  />\n                    </div>\n                </div>   \n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"row\">\n\n    <div *ngFor=\"let p of productos\" class=\"col-4\">\n        <app-producto [producto]=\"p\"></app-producto>\n    </div>\n   \n</div>\n\n\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Usuario } from 'src/app/entidades/usuario';\nimport { SessionService } from 'src/app/servicios/session.service';\nimport { UsuariosService } from 'src/app/servicios/usuarios.service';\n\n@Component({\n  selector: 'app-perfil',\n  templateUrl: './perfil.component.html',\n  styleUrls: ['./perfil.component.css']\n})\nexport class PerfilComponent implements OnInit {\n\n  public mensaje:string\n  public estiloLogin:string //ESTO QUE ES????\n  public usuario:Usuario\n\n  constructor(private sessionService:SessionService,\n              private usuariosService:UsuariosService,\n              private router:Router) {\n    \n    //usr es el usuario que está en la sesión\n    let usr = sessionService.getItem(\"usuario\")\n    //en vez de unirlo directamente al formulario usaremos una copia\n\n    //la clonación de objetos en js es una mierda pinchada en un palo porque \n    //no es en profundidad\n    let usrCopia_1 = Object.create(usr)\n\n    //Podemos serializar el objeto a JSON y luego deserializarlo\n    //'clonaria' en profundidad pero se perderían el prototipo y cualquier funcion\n    let usrCopia_2 = JSON.parse(JSON.stringify(usr))\n    //Si queremos añadirle las funciones le podemos asignar el prototipo del objeto original\n    Object.setPrototypeOf(usrCopia_2, usr)\n\n    this.usuario = usrCopia_2\n\n    //Si usamos directamente el sessionService\n    this.usuario = sessionService.getItemCopia(\"usuario\")\n  }\n\n  ngOnInit() {\n  }\n\n  public guardar():void{\n\n    this\n      .usuariosService\n      .modificarUsuario(this.usuario)\n      .subscribe(\n        usuarioModificado => {\n          //Como todo ha ido bien sustituimos el usuario que está\n          //en el sessionService por el nuevo\n          //this.sessionService.setItem(\"usuario\", this.usuario)\n\n          //Tambien podemos utilizar el objeto que nos ha devuelto el servicio ReST\n          this.sessionService.setItem(\"usuario\", usuarioModificado)\n          this.usuario = usuarioModificado\n          this.mensaje = \"\"\n        },\n        error => { \n          console.log(error) \n          this.mensaje = \"Ha fallado algo\"\n        }\n      )\n\n  }\n\n  public baja():void{\n\n    this\n      .usuariosService\n      .borrarUsuario(this.usuario)\n      .subscribe(\n        respuesta => {\n          //this.sessionService.removeItem(\"usuario\")\n          //this.sessionService.removeItem(\"JWT\")\n          this.sessionService.vaciar()\n          this.router.navigateByUrl(\"/\")\n        },\n        error => console.log(error)\n      )\n\n  }\n\n}\n\n\n\n/*\n\n{\n  nombre : 'a',\n  direccion :  { ciudad : 'b' },\n  telefono : 'c'\n  saludar : function(){\n    console.log(\"HOLA\")\n  }\n}\n\n{\n  \"nombre\" : \"a\",\n  \"direccion\" : { \"ciudad\" : \"b\"},\n  \"telefono\" : \"c\"\n}\n\n\n*/\n\n","<div class=\"text-center\">\n    <h2>Perfil de usuario</h2>\n</div>\n        \n<div class=\"form-horizontal\" id=\"formulario\">\n    <div class=\"form-group\">\n        <label class=\"control-label col-xs-2\" for=\"nombre\">Nombre</label>\n        <div class=\"col-xs-8\">\n            <input type=\"text\" id=\"nombre\" class=\"form-control\" required=\"required\" [(ngModel)]=\"usuario.nombre\"/>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label class=\"control-label col-xs-2\" for=\"direccion\">Dirección</label>\n        <div class=\"col-xs-8\">\n            <input type=\"text\" [ngClass]=\"'form-control '+estiloLogin\" class=\"form-control\" id=\"direccion\" [(ngModel)]=\"usuario.direccion\"/>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label class=\"control-label col-xs-2\" for=\"telefono\" >Teléfono</label>\n        <div class=\"col-xs-8\">\n            <input type=\"text\" class=\"form-control\" id=\"telefono\" [(ngModel)]=\"usuario.telefono\" required=\"required\"/>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label class=\"control-label col-xs-2\" for=\"correoE\">Correo E</label>\n        <div class=\"col-xs-8\">\n            <input type=\"text\" class=\"form-control\" id=\"correoE\" [(ngModel)]=\"usuario.correoE\"/>\n        </div>\n    </div>                              \n    <div class=\"form-group\">\n    <label class=\"control-label col-xs-2\" for=\"idioma\">Idioma</label>\n    <div class=\"col-xs-8\">\n        <select class=\"form-control\" id=\"idioma\" [(ngModel)]=\"usuario.idioma\">\n            <option>ES</option>\n            <option>EN</option>\n        </select>\n    </div>\n    </div>                              \n</div>\n\n<div *ngIf=\"mensaje\" class=\"alert alert-danger\">{{mensaje}}</div>\n\n<div class=\"text-center\">\n    <input type=\"button\" value=\"Guardar\" class=\"btn mr-1 btn-primary\" style=\"width:110px\" (click)=\"guardar()\"/>\n    <input type=\"button\" value=\"Baja\"    class=\"btn mr-1 btn-danger\"  style=\"width:110px\" data-toggle=\"modal\" data-target=\"#myModal\"/>\n</div>   \n    \n<!-- The Modal -->\n<div class=\"modal fade\" id=\"myModal\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n        <div class=\"modal-content\">            \n            <!-- Modal Header -->\n            <div class=\"modal-header\">\n                <h4 class=\"modal-title\">Borrar usuario</h4>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n            </div>\n            \n            <!-- Modal body -->\n            <div class=\"modal-body\">\n                ¿Está seguro de querer darse de baja?\n            </div>\n            \n            <!-- Modal footer -->\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\">Cancelar</button>\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" (click)=\"baja()\">Baja</button>\n            </div>        \n        </div>\n    </div>\n</div>\n\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cabecera',\n  templateUrl: './cabecera.component.html',\n  styleUrls: ['./cabecera.component.css']\n})\nexport class CabeceraComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<br/>\n<div class=\"text-center page-header\">\n    <h2>Tienda 3000 2.0</h2>\n</div>\n  \n\n","import { NgModule } from '@angular/core';\n\nimport { LoginComponent } from './componentes/usuarios/login/login.component';\nimport { RegistroComponent } from './componentes/usuarios/registro/registro.component';\nimport { AceptacionTerminosComponent } from './componentes/usuarios/aceptacion-terminos/aceptacion-terminos.component';\nimport { CabeceraComponent } from './componentes/maquetacion/cabecera/cabecera.component';\nimport { PieComponent } from './componentes/maquetacion/pie/pie.component';\nimport { CatalogoComponent } from './componentes/tienda/catalogo/catalogo.component';\nimport { MaquetacionLoginComponent } from './componentes/usuarios/maquetacion-login/maquetacion-login.component';\nimport { MaquetacionTiendaComponent } from './componentes/tienda/maquetacion-tienda/maquetacion-tienda.component';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { PerfilComponent } from './componentes/usuarios/perfil/perfil.component';\nimport { CestaComponent } from './componentes/tienda/cesta/cesta.component';\nimport { ConfirmacionCompraComponent } from './componentes/tienda/confirmacion-compra/confirmacion-compra.component';\n\n//Estas rutas son para el router-outlet que hay en MaquetacionLogin.html\nconst rutasMaquetacionLogin = [\n  {\n    path      : '',\n    component : LoginComponent\n  },\n  {\n    path      : 'registro',\n    component : RegistroComponent\n  },\n  {\n    path      : 'aceptacion',\n    component : AceptacionTerminosComponent\n  }\n]\n\n//Estas rutas son para el router-outlet que hay en MaquetacionTienda.html\nconst rutasMaquetacionTienda = [\n  {\n    path      : 'catalogo',\n    component : CatalogoComponent\n  },\n  {\n    path      : 'perfil',\n    component : PerfilComponent\n  },\n  {\n    path      : 'cesta',\n    component : CestaComponent\n  },\n  {\n    path      : 'confirmacion',\n    component : ConfirmacionCompraComponent\n  }\n]\n\n//Estas rutas son para el router-outlet que hay en AppComponent.html\nconst rutas = [\n  {\n    path      : '',\n    component : MaquetacionLoginComponent,\n    children  : rutasMaquetacionLogin\n  },\n  {\n    path      : 'usuarios',\n    component : MaquetacionLoginComponent,\n    children  : rutasMaquetacionLogin\n  },\n  {\n    path      : 'tienda',\n    component : MaquetacionTiendaComponent,\n    children  : rutasMaquetacionTienda\n  }\n\n]\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    //Estas son las rutas que se asociarán a la primera carpeta de la url\n    RouterModule.forRoot(rutas)\n  ],\n  exports: [ RouterModule ],\n  providers: [],\n  bootstrap: []\n})\nexport class AppRutasModule { }\n\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Usuario } from '../entidades/usuario';\r\nimport { Observable } from 'rxjs';\r\nimport { Configuracion } from '../util/configuracion';\r\n\r\n\r\n@Injectable( { providedIn : 'root' } )\r\nexport class UsuariosService {\r\n\r\n    public constructor(private httpClient:HttpClient,\r\n                       private configuracion:Configuracion){\r\n    }\r\n\r\n    //POST /usuarios\r\n    //Content-type: application/json\r\n    //------------------------------\r\n    //{ usuario }    \r\n    public registrarUsuario(usuario:Usuario):Observable<any>{\r\n        return this.httpClient.post(this.configuracion.url_servidor+\"/usuarios\", usuario)\r\n    }\r\n\r\n    //PUT /usuarios/:id\r\n    //Content-type: application/json\r\n    //Authorization: Bearer fuywggfgfew.ghfjkhgkjshg.hfjkdahfsjkdfh=\r\n    //------------------------------\r\n    //{ usuario }\r\n    public modificarUsuario(usuario:Usuario):Observable<any>{        \r\n        //De esto se encarga el IterceptorAutenticacion\r\n        //let opciones = {\r\n        //    headers : {\r\n        //        Authorization : 'Bearer asereje.ja.deje'\r\n        //    }\r\n        //}\r\n        return this.httpClient.put(this.configuracion.url_servidor+\"/usuarios/\"+usuario._id, usuario /*, opciones*/)\r\n    }\r\n    \r\n    //borrarUsuario (un usuario solo podrá darse de baja a si mismo)\r\n    //DELETE /usuarios/:id\r\n    //Authorization: Bearer fuywggfgfew.ghfjkhgkjshg.hfjkdahfsjkdfh=\r\n    public borrarUsuario(usuario:Usuario):Observable<any>{\r\n        return this.httpClient.delete(this.configuracion.url_servidor+\"/usuarios/\"+usuario._id)\r\n    }\r\n    \r\n    //Solo para los empleados, y los empleados no utilizan esta aplicacion\r\n    //listarUsuarios NO\r\n    //buscarUsuario por id  NO\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { DetallePedido } from 'src/app/entidades/detallePedido';\nimport { Pedido } from 'src/app/entidades/pedido';\nimport { SessionService } from 'src/app/servicios/session.service';\n\n@Component({\n  selector: 'app-cesta',\n  templateUrl: './cesta.component.html',\n  styleUrls: ['./cesta.component.css']\n})\nexport class CestaComponent implements OnInit {\n\n  public cesta:Pedido\n\n  constructor(private sessionService:SessionService) { \n    sessionService.saludar()\n    this.cesta = sessionService.getItem(\"cesta\")\n  }\n\n  ngOnInit(): void {\n  }\n\n  //comprar\n\n  public vaciarCesta():void{\n    //Le podemos pedir a la cesta, que está guardada en el sessionService, que elimine sus detalles\n    this.cesta.eliminarDetalles()\n\n    //Tambien podemos directamente sustituir la cesta que hay en el sessionService por un pedido nuevo\n    //this.sessionService.setItem(\"cesta\", new Pedido())\n    //this.cesta = this.sessionService.getItem(\"cesta\")\n  }\n\n}\n","\n<h4 *ngIf=\"cesta.getDetalles().length==0\" class=\"d-flex justify-content-center mt-4 mb-4\">\n    Todavía no hay productos en la cesta\n</h4>\n\n<div *ngFor=\"let dp of cesta.getDetalles()\">\n    <app-detallePedido [detalle]=\"dp\" [cesta]=\"cesta\"></app-detallePedido>\n</div>\n\n<div class=\"d-flex justify-content-center mt-4 mb-4\">\n\n    <h4>\n        Total {{ cesta.total }} €\n        <input type=\"button\" value=\"Guardar\" class=\"btn btn-primary ml-2\" style=\"width:110px\" />\n        <button class=\"btn btn-primary ml-2\" routerLink=\"/tienda/confirmacion\">Comprar</button>\n        <button class=\"btn btn-danger ml-2\" (click)=\"vaciarCesta()\">Vaciar</button>\n    </h4>\n\n</div>\n\n","import { DetallePedido } from './detallePedido';\r\nimport { Usuario } from './usuario';\r\n\r\nexport class Pedido {\r\n\r\n    public constructor(\r\n        public _id          : string  = null,\r\n        //Composición de objetos\r\n        public usuario      : Usuario = null,\r\n        public fechaEntrega : string  = null,\r\n        public formaPago    : string  = null,\r\n        public dirEntrega   : string  = null,\r\n        public estado       : string  = null,\r\n        public total        : number  = null,\r\n        private detalles    : DetallePedido[] = []){\r\n    }\r\n\r\n    //Añade un detalle al pedido\r\n    //Si el pedido cuenta ya con un detalle que incñuye el producto recibido los suma\r\n    public addDetalle(nuevoDetalle:DetallePedido){\r\n        \r\n        let encontrado:boolean = false\r\n        for(let dp of this.detalles){\r\n            if(dp.producto._id == nuevoDetalle.producto._id){\r\n                //dp.cantidad = dp.cantidad + nuevoDetalle.cantidad\r\n                dp.cantidad += nuevoDetalle.cantidad\r\n                encontrado = true\r\n                break\r\n            }\r\n        }\r\n               \r\n        if(!encontrado){\r\n            this.detalles.push(nuevoDetalle)\r\n        }\r\n\r\n        this.calcularTotal()\r\n    }\r\n\r\n    //Aumenta la cantidad del detalle que tiene el producto indicado en 1\r\n    public aumentarCantidadDetalle(idProducto:string){\r\n        for(let dp of this.detalles){\r\n            if(dp.producto._id == idProducto){\r\n                dp.cantidad++\r\n                break\r\n            }\r\n        }\r\n        this.calcularTotal()\r\n    }\r\n\r\n    //Disminuye la cantidad del detalle que tiene el producto indicado en 1\r\n    //La cantidad nunca llegará a 0\r\n    public reducirCantidadDetalle(idProducto:string){\r\n        for(let dp of this.detalles){\r\n            if(dp.producto._id == idProducto && dp.cantidad>1){\r\n                dp.cantidad--\r\n                break\r\n            }\r\n        }\r\n        this.calcularTotal()        \r\n    }\r\n\r\n    //Elimina el detalle que contiene el producto indicado\r\n    public eliminarDetalle(idProducto:string){\r\n        for(let a=0; a<this.detalles.length; a++){\r\n            let dp = this.detalles[a]\r\n            if(dp.producto._id == idProducto){\r\n                this.detalles.splice(a,1)\r\n                break\r\n            }\r\n        }\r\n        this.calcularTotal()\r\n    }\r\n\r\n    public eliminarDetalles(){\r\n        this.detalles = []\r\n        this.calcularTotal()\r\n    }\r\n\r\n    public calcularTotal(){\r\n        let total:number = 0\r\n        for(let dp of this.detalles){\r\n            total += dp.cantidad*dp.precio\r\n        }\r\n        this.total = total\r\n    }\r\n\r\n    public getDetalles():DetallePedido[]{\r\n        //Aqui devolveremos una copia del array para no hacer el canelo\r\n        return this.detalles\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\n\r\nCod: PED-17\r\nFecha: 19/11/2020\r\nCliente: Venancia\r\n\r\n------------------------------------\r\nPROD   DESC            CANT   PRECIO\r\n\r\np1     movida             6       10\r\np2     movidón            6       10\r\np3     movidote           6       10\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SessionService } from 'src/app/servicios/session.service';\nimport { UsuariosService } from 'src/app/servicios/usuarios.service';\n\n@Component({\n  selector: 'app-aceptacion-terminos',\n  templateUrl: './aceptacion-terminos.component.html',\n  styleUrls: ['./aceptacion-terminos.component.css']\n})\nexport class AceptacionTerminosComponent implements OnInit {\n\n  public acepta:boolean = false\n  public mensaje:string = \"\"\n\n  constructor(private sessionService:SessionService,\n              private usuariosService:UsuariosService,\n              private router:Router) { \n  }\n\n  ngOnInit(): void {\n  }\n\n  public registrar(){\n\n    if(!this.acepta){\n      this.mensaje = \"Debe aceptar los terminos\"\n      return\n    }\n\n    let usuarioARegistrar = this.sessionService.getItem(\"usuario\")\n\n    this\n      .usuariosService\n      .registrarUsuario(usuarioARegistrar)\n      .subscribe(\n        //function(data){ console.log(data) }\n        data => this.router.navigateByUrl(\"/\"),\n        error => this.mensaje = \"DATOS INCORRECTOS\"\n      )\n  }\n}\n","<p></p>\n\n<div class=\"text-center\">\n    <h2>Aceptación de condiciones</h2>\n</div>\n\n<p class=\"text-justify\">\n  Lorem fistrum nostrud tiene musho peligro ullamco a gramenawer nostrud voluptate te voy a borrar el cerito elit me cago en tus muelas reprehenderit. Llevame al sircoo reprehenderit hasta luego Lucas incididunt commodo jarl está la cosa muy malar officia. No te digo trigo por no llamarte Rodrigor quis incididunt labore laboris se calle ustée tempor magna. Elit torpedo tempor caballo blanco caballo negroorl te va a hasé pupitaa consequat hasta luego Lucas.\n</p>\n\n<p class=\"text-justify\">\n  Qui torpedo et ese pedazo de apetecan ullamco sed sit amet magna. Tempor nisi cillum caballo blanco caballo negroorl. De la pradera tiene musho peligro consequat elit veniam ex labore ese pedazo de cillum. Voluptate ese que llega consectetur incididunt por la gloria de mi madre caballo blanco caballo negroorl labore labore. A peich exercitation llevame al sircoo consequat tempor. Sexuarl reprehenderit amatomaa magna magna quis a peich apetecan ahorarr. \n</p>\n\n<p class=\"text-justify\">\n  A gramenawer sit amet jarl aliqua officia commodo condemor no puedor va usté muy cargadoo ese que llega. Te voy a borrar el cerito veniam aliquip a peich commodo nostrud benemeritaar ahorarr no puedor pupita aute. Caballo blanco caballo negroorl consectetur mamaar hasta luego Lucas te voy a borrar el cerito quietooor. Dolor te va a hasé pupitaa quietooor sed veniam ese pedazo de ut la caidita diodenoo se calle ustée. Aliquip pecador no te digo trigo por no llamarte Rodrigor occaecat jarl.\n</p>\n\n<!--\n<div *ngIf=\"mensaje.length>0\" class=\"alert alert-danger\">{{mensaje}}</div>\n-->\n<div *ngIf=\"mensaje\" class=\"alert alert-danger\">{{mensaje}}</div>\n\n<div class=\"text-center\">\n    <label class=\"control-label mr-2\">Acepto</label>\n    <input class=\"mr-2\" [(ngModel)]=\"acepta\" type=\"checkbox\" />    \n    <button class=\"btn mr-2 btn-warning\" style=\"width:110px\" routerLink=\"/usuarios/registro\">Volver</button>\n    <button class=\"btn mr-2 btn-success\" style=\"width:110px\" (click)=\"registrar()\">Registrar</button>\n</div>\n\n\n\n\n\n\n\n","import { Component, Input, OnInit } from '@angular/core';\nimport { DetallePedido } from 'src/app/entidades/detallePedido';\nimport { Pedido } from 'src/app/entidades/pedido';\nimport { Producto } from 'src/app/entidades/producto';\nimport { ProductosService } from 'src/app/servicios/productos.service';\nimport { SessionService } from 'src/app/servicios/session.service';\n\n@Component({\n  selector: 'app-detallePedido',\n  templateUrl: './detallePedido.component.html',\n  styleUrls: ['./detallePedido.component.css']\n})\nexport class DetallePedidoComponent implements OnInit {\n\n  @Input()\n  public detalle:DetallePedido\n  @Input() \n  private cesta:Pedido\n\n  constructor() { \n  }\n\n  ngOnInit(): void {\n  }\n\n  public aumentarCantidad():void{\n    this.cesta.aumentarCantidadDetalle(this.detalle.producto._id)\n  }\n  \n  public disminuirCantidad():void{\n    this.cesta.reducirCantidadDetalle(this.detalle.producto._id)\n  }\n\n  public borrarDetalle():void{\n    this.cesta.eliminarDetalle(this.detalle.producto._id)\n  }\n\n}\n\n\n\n\n\n\n","<div class=\"card mt-4\">\n\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <img class=\"card-img-top\" src=\"https://picsum.photos/300/200?random={{detalle.producto._id}}\" alt=\"Card image\">\n    </div>\n\n    <div class=\"col-9\"> \n\n      <h4 class=\"card-title\">{{detalle.producto.nombre}}</h4>\n      <h6 class=\"card-title\">{{detalle.producto.fabricante}}</h6>\n      <p class=\"card-text\">{{ detalle.producto.descripcion.substring(0,200)}}...</p>\n\n\n      <div class=\"d-flex mb-3\">\n        <div class=\"p-2 mr-auto\">\n          <span>{{detalle.precio}} €</span>\n        </div>\n    \n        <div class=\"p-2\">\n          <button class=\"btn btn-primary ml-1 mr-1\" (click)=\"disminuirCantidad()\">-</button>\n          <span>{{detalle.cantidad}} </span>\n          <button class=\"btn btn-primary ml-1 mr-1\" (click)=\"aumentarCantidad()\">+</button>\n          <button class=\"btn btn-danger ml-1 mr-1\" (click)=\"borrarDetalle()\">Borrar</button>          \n        </div>\n      </div>\n        \n    </div>\n\n  </div>\n\n</div>\n","import { Injectable } from '@angular/core';\r\n\r\n//Con providedIn:root convertimos a este servicio en global para la aplicacion\r\n@Injectable({ providedIn : 'root' })\r\nexport class SessionService {\r\n\r\n    //Nuestro SessionService guarda las movidas EN MEMORIA\r\n    private valores:any[] = []\r\n\r\n    public constructor(){\r\n        console.log(\"Creando SessionService\")\r\n    }\r\n\r\n    public setItem(clave:string, valor:any):void{\r\n        //Guardamos las cosas EN MEMORIA!\r\n        this.valores[clave] = valor\r\n    }\r\n    \r\n    public setItemCopia(clave:string, valor:any):void{\r\n        //Guardamos una copia\r\n        let copia = JSON.parse(JSON.stringify(valor))\r\n        Object.setPrototypeOf(copia, valor)\r\n        this.valores[clave] = valor\r\n    }\r\n\r\n    public getItem(clave:string):any{\r\n        return this.valores[clave]\r\n    }\r\n\r\n    public getItemCopia(clave:string):any{\r\n        let objeto = this.valores[clave]\r\n        let copia = JSON.parse(JSON.stringify(objeto))\r\n        Object.setPrototypeOf(copia, objeto)\r\n        return copia\r\n    }\r\n\r\n    public removeItem(clave:string):void{\r\n        //Para borrar una entrada en un array asociativo\r\n        delete this.valores[clave]\r\n    }\r\n\r\n    public vaciar():void{\r\n        this.valores = []\r\n    }\r\n\r\n    public saludar():void{\r\n        console.log(\"Hola, soy el SessionService!\")\r\n    }\r\n\r\n    /*\r\n    private deepCopy(obj): any {\r\n        let copy: any;\r\n\r\n        // Handle the 3 simple types, and null or undefined\r\n        if (null == obj || \"object\" != typeof obj) return obj;\r\n\r\n        // Fechas\r\n        if (obj instanceof Date) {\r\n            copy = new Date();\r\n            copy.setTime(obj.getTime());\r\n            return copy;\r\n        }\r\n\r\n        // Arrays\r\n        if (obj instanceof Array) {\r\n            copy = [];\r\n            for (var i = 0, len = obj.length; i < len; i++) {\r\n                copy[i] = this.deepCopy(obj[i]);\r\n            }\r\n            return copy;\r\n        }\r\n\r\n        // Objects\r\n        if (obj instanceof Object) {\r\n            copy = {};\r\n            for (var attr in obj) {\r\n                if (obj.hasOwnProperty(attr)) copy[attr] = this.deepCopy(obj[attr]);\r\n            }\r\n            return copy;\r\n        }\r\n\r\n        throw new Error(\"Unable to copy obj! Its type isn't supported.\");\r\n    }\r\n\r\n\r\n\r\n    */\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Usuario } from '../entidades/usuario';\r\nimport { Configuracion } from '../util/configuracion';\r\n\r\n@Injectable( { providedIn : 'root' } )\r\nexport class AutenticacionService {\r\n\r\n    public constructor(private httpClient:HttpClient,\r\n                       private configuracion:Configuracion){\r\n    }\r\n\r\n    public getToken(usuario:Usuario):Observable<any>{\r\n        return this.httpClient.post(this.configuracion.url_servidor+\"/login\", \r\n                                    usuario);\r\n    }\r\n\r\n}\r\n","import { Producto } from './producto';\r\n\r\nexport class DetallePedido {\r\n\r\n    public constructor(\r\n        public cantidad   : number   = null,\r\n        public precio     : number   = null,\r\n        public descuento  : number   = null,\r\n        public producto   : Producto = null){\r\n    }   \r\n\r\n}\r\n","\r\nexport class Usuario {\r\n\r\n    public constructor(\r\n        public _id       : string = null,\r\n        public login     : string = null,\r\n        //\r\n        //A VER QUE PASA CON ESTO:\r\n        //\r\n        public pw        : string = null,\r\n        public nombre    : string = null,\r\n        //¿necesitamos realmente el rol?\r\n        public rol       : string = null,\r\n        public correoE   : string = null,\r\n        public direccion : string = null,\r\n        public telefono  : string = null,\r\n        public idioma    : string = null\r\n     ){ \r\n     }\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component, Input, OnInit } from '@angular/core';\nimport { DetallePedido } from 'src/app/entidades/detallePedido';\nimport { Pedido } from 'src/app/entidades/pedido';\nimport { Producto } from 'src/app/entidades/producto';\nimport { ProductosService } from 'src/app/servicios/productos.service';\nimport { SessionService } from 'src/app/servicios/session.service';\n\n@Component({\n  selector: 'app-producto',\n  templateUrl: './producto.component.html',\n  styleUrls: ['./producto.component.css']\n})\nexport class ProductoComponent implements OnInit {\n\n  //ProductoComponent recibe el producto que ha de mostrar a través de su selector\n  //Para indicarlo marcamos la propiedad con el selector '@Input()'\n  @Input()\n  public producto:Producto\n\n  constructor(private sessionService:SessionService) { \n  }\n\n  ngOnInit(): void {\n  }\n\n  public comprar():void {\n\n      let cesta:Pedido = this.sessionService.getItem(\"cesta\")\n      let detalle:DetallePedido = new DetallePedido(1,this.producto.precio,0,this.producto)\n      cesta.addDetalle(detalle)\n\n  }\n\n\n}\n","\n<div class=\"card mt-4\">\n    <img class=\"card-img-top\" src=\"https://picsum.photos/300/200?random={{producto._id}}\" alt=\"Card image\">\n    <div class=\"card-body\">\n      <h4 class=\"card-title\">{{producto.nombre}}</h4>\n      <h6 class=\"card-title\">{{producto.fabricante}}</h6>\n      <p class=\"card-text\">{{ producto.descripcion.substring(0,200)}}...</p>\n      \n      <div class=\"row\">\n        <h4 class=\"col-8\">{{producto.precio}} €</h4>\n        <button class=\"btn btn-primary col-4\" (click)=\"comprar()\">Comprar</button>\n      </div>\n    </div>\n</div>\n\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}